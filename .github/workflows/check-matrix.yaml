name: "Build and Deploy"
run-name: ${{ github.actor }} has triggered gradle build to ${{ github.event.inputs.environment_name }}


on:
  workflow_dispatch:
    inputs:
      environment_name:
        description: 'enter the environment'
        type: choice
        options:
          - int
          - qa
          - stage
        required: true

permissions:
  id-token: write
  contents: write

# Concurrency settings to prevent multiple runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: test
        working-directory: .
        run: |
          sed -i "s#test=VAL#test=MYNEWVAR#" gteam_env.properties
          cat ./gteam_env.properties
        shell: bash        
        
      - name: Chat notification for errors
        if: ${{ failure() }}
        run: |
          message="failed"
  
          payload=$(jq -n --arg msg "$message" '{ text: $msg }')
          curl -X POST -H "Content-Type: text/plain" --data "$payload" "https://chat.googleapis.com/v1/spaces/AAAA_pSsBgQ/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=9YXYNNZ6P56uIiO4tUnGIs00Yo4Hbb-r-8m1pbZ_j5E"
        shell: bash
      - name: Chat notification for success
        if: ${{ success() }}
        run: |
          run_link="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          payload=$(jq -n \
            --arg message "ðŸš§ *Build Started* ðŸš§\nThe build has started on branch"
            --arg branch "$GITHUB_REF" \
            --arg commit "$GITHUB_SHA" \
            --arg actor "$GITHUB_ACTOR" \
            --arg link "$run_link" \
            '{
              text: "`\($message) `\($branch)`.\n\n*Commit:* `\($commit)`\n*Triggered by:* \($actor)\n*Run Link:* <\($link)>"
            }')
          
          curl -X POST -H "Content-Type: application/json" --data "$payload" "https://chat.googleapis.com/v1/spaces/AAAA_pSsBgQ/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=9YXYNNZ6P56uIiO4tUnGIs00Yo4Hbb-r-8m1pbZ_j5E"
        shell: bash
      - name: teststep
        shell: bash
        run: |
          echo "mytest"
    
    
        

  # define-matrix:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
        
  #     - name: Get Pods
  #       id: get_pods
  #       uses: ./.github/actions/checks_permission
  #       with:
  #         environment: ${{ github.event.inputs.environment_name }}
          
  #   outputs:
  #     pod: ${{ steps.get_pods.outputs.pod }}
          
  # define-pod:
  #   runs-on: ubuntu-latest
  #   needs: define-matrix
  #   strategy:
  #     matrix:
  #       region: ${{ fromJSON(needs.define-matrix.outputs.pod) }}
  #   environment: int-${{ matrix.region }}   # Pass the region directly here
  #   steps:
  #     - name: test
  #       run: |
  #         echo ${{ vars.region}}
  #       shell: bash
        
         
    
        
        
  
