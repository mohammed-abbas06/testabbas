name: "Build and Deploy"
run-name: ${{ github.actor }} has triggered gradle build to ${{ github.event.inputs.environment_name }}


on:
  workflow_dispatch:
    inputs:
      environment_name:
        description: 'enter the environment'
        type: choice
        options:
          - int
          - qa
          - stage
        required: true

permissions:
  id-token: write
  contents: write

# Concurrency settings to prevent multiple runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: test
        shell: bash
        run: |
          # Input: Comma-separated list of Auto Scaling Group (ASG) names
          asg_names="test1,test2"
          echo $asg_names
          # Convert the comma-separated string into an array
          IFS=',' read -r -a asg <<< "$asg_names"   
          echo "ASG Names in array: ${asg[@]}"
          for ASG_NAME in "${asg[@]}"; do
            echo "Updating the Apputil instances to 1 for Auto Scaling Group: $ASG_NAME"
            echo "${ASG_NAME}"
          done
    
        

  # define-matrix:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
        
  #     - name: Get Pods
  #       id: get_pods
  #       uses: ./.github/actions/checks_permission
  #       with:
  #         environment: ${{ github.event.inputs.environment_name }}
          
  #   outputs:
  #     pod: ${{ steps.get_pods.outputs.pod }}
          
  # define-pod:
  #   runs-on: ubuntu-latest
  #   needs: define-matrix
  #   strategy:
  #     matrix:
  #       region: ${{ fromJSON(needs.define-matrix.outputs.pod) }}
  #   environment: int-${{ matrix.region }}   # Pass the region directly here
  #   steps:
  #     - name: test
  #       run: |
  #         echo ${{ vars.region}}
  #       shell: bash
        
         
    
        
        
  
